pipeline {
  agent any

  tools {
    nodejs "node"
  }

  parameters {
    string(name: 'container_name', defaultValue: 'objective_newton', description: 'Nombre del contenedor de Docker.')
    string(name: 'image_name', defaultValue: 'jenkins/jenkins:lts-jdk17', description: 'Nombre de la imagen de Docker.')
    string(name: 'tag_image', defaultValue: 'lts', description: 'Tag de la imagen de la p√°gina.')
    string(name: 'container_port', defaultValue: '8080', description: 'Puerto que usa el contenedor')
}

  stages {
    stage('build') {
      steps {
        dir('jenkins') {
          script {
            try {
              sh 'docker stop ${container_name}'
              sh 'docker rm ${container_name}'
              sh 'docker rmi ${image_name}:${tag_image}'
            } catch (Exception e) {
              echo 'Exception occurred: ' + e.toString()
            }
          }
          sh 'docker build -t ${image_name}:${tag_image} .'
        }
      }
    }

    stage('deploy') {
      steps {
        sh 'docker run -d -p ${container_port}:80 --name ${container_name} ${image_name}:${tag_image}'
      }
    }
  }

}
